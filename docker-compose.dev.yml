# GREEN-PI DOCKER CONTAINER
---
version: '3'

services:
  green-pi-frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /usr/src/app/green-pi-frontend
    networks:
      - web
    links:
      - green-pi-api
    environment:
      REACT_APP_GREEN_PI_BACKEND_HOST: http://localhost:8000
    command: ionic serve
    volumes:
      - frontend_build:/usr/src/app/green-pi-frontend/build
      - .:/usr/src/app
    ports:
      - 8100:8100
  green-pi-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - web
    volumes:
      - .:/usr/src/app
    links:
      - db
    environment:
      GREEN_PI_DB_CONNECTION: postgresql://green-pi:green-pi@db:5432/green-pi-db
      GPIOZERO_PIN_FACTORY: mock
      FLASK_APP: wsgi:app
      LOGLEVEL: DEBUG
      FLASK_ENV: development
    command: flask run -h 0.0.0.0 -p 8000
    ports:
      - 8000:8000
  green-pi:
    build:
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - web
    links:
      - db
    volumes:
      - .:/usr/src/app
    environment:
      GREEN_PI_DB_CONNECTION: postgresql://green-pi:green-pi@db:5432/green-pi-db
      GPIOZERO_PIN_FACTORY: mock
      FLASK_APP: green_pi
      FLASK_ENV: development
      LOGLEVEL: INFO
    command: flask run-scheduler
    privileged: true
    devices:
      - /dev/gpiomem:/dev/gpiomem
      - /dev/mem:/dev/mem:root
    depends_on:
      - db
  db:
    image: arm32v7/postgres:10
    restart: always
    environment:
      POSTGRES_PASSWORD: "green-pi"
      POSTGRES_USER: "green-pi"
      POSTGRES_DB: "green-pi-db"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - web
    ports:
      - 5432:5432

networks:
  web:
    driver: bridge
volumes:
  grafana_data:
    driver: local
  db_data:
    driver: local
  frontend_build:
    driver: local
